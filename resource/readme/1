# passgen

- - -
### Консольный генератор паролей на C

- - -
![](img.jpg)

- - -
1. [Сборка](#Сборка)
2. [Установка](#Установка)
3. [Установка собранного пакета вручную](#Установка собранного пакета вручную)
4. [Использование](#Использование)
5. [Указать явное использование языка](#Указать явное использование языка)
6. [Скорость](#Скорость)
7. [Справка по командам make](#Справка по командам make)
8. [Локализация программы](#Локализация программы)
9. [Добавить перевод](#Добавить перевод)
10. [Поддерживаемые ОС](#Поддерживаемые ОС)

- - -
## Сборка

```bash
$ git clone https://github.com/yarkovaleksei/passgen.git
$ cd passgen
$ ./configure
$ make
```

*Если файла ./configure нет, попробуйте запустить autoreconf*

```bash
$ autoreconf
$ ./configure
$ make
```

- - -
# Установка

*Самый простой вариант:*

```bash
$ sudo make install
```

Но [вот тут](https://habrahabr.ru/post/130868/) очень не советуют так делать, а советуют юзать **checkinstall**.

В общем-то пакет не имеет проблем при любом способе установки и удаления, но мы же привыкли верить Хабрасообществу?

Поэтому вот такая команда задействует **checkinstall** + соберет пакет в каталог **build**.

```bash
$ sudo make build install=yes
```

Если указать `install=no` или просто опустить параметр `install`, то пакет будет собран в каталог **build**, но установки не прозойдет.

- - -
## Установка собранного пакета вручную

```bash
$ sudo dpkg -i ./build/passgen*.deb
```

- - -
## Использование

```bash
$ passgen -h
