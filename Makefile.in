#!/usr/bin/make -f

prefix         =    @prefix@
exec_prefix    =    @exec_prefix@
# Каталог, куда будет установлена программа
bindir         =    @bindir@
sbindir        =    @sbindir@
libexecdir     =    @libexecdir@
sysconfdir     =    @sysconfdir@
sharedstatedir =    @sharedstatedir@
localstatedir  =    @localstatedir@
libdir         =    @libdir@
includedir     =    @includedir@
oldincludedir  =    @oldincludedir@
datarootdir    =    @datarootdir@
datadir        =    @datadir@
infodir        =    @infodir@
localedir      =    @localedir@
mandir         =    @mandir@
docdir         =    @docdir@
htmldir        =    @htmldir@
dvidir         =    @dvidir@
pdfdir         =    @pdfdir@
psdir          =    @psdir@


# Makefile for PassGen project
# Документация с примерами: http://linux.yaroslavl.ru/docs/prog/make_intro_ru.html

PACKAGE_NAME    	= "@PACKAGE_NAME@"
PACKAGE_VERSION 	= "@PACKAGE_VERSION@"
PACKAGE_URL			= "@PACKAGE_URL@"
PACKAGE_DESCRIPTION = "@PACKAGE_DESCRIPTION@"

PACKAGE_AUTHOR      = "@PACKAGE_AUTHOR@"
PACKAGE_EMAIL       = @PACKAGE_BUGREPORT@
PACKAGE_LICENSE   	= "@PACKAGE_LICENSE@"

# Рабочая оболочка
SHELL           = /bin/bash
# Зависимости пакета
DEPENDENCIES    = ""
# Описание пакета
DESCRIPTIONFILE = "./description-pak"
# Каталог для собранного бинарного файла
BINDIR          = ./bin
# Каталог для manpage
MANDIR          = ./man
# Путь к файлу manpage
MANFILE			= $(MANDIR)/$(PACKAGE_NAME).1
# Каталог для установки файлов manpage
MAN_TARGET      = $(mandir)/man1
# Каталог для deb пакета
DEBDIR          = ./deb
# Каталог с исходниками программы
SRCDIR          = ./source
# Каталог для файлов локализации
LOCALEDIR       = ./locale
# Каталог для установки файлов локализации
LOCALE_TARGET   = $(localedir)
# Список каталогов для локализаций (имя каталога соответствует языку: ru, en, fr и т. п.)
LOCALES			= $$(find $(LOCALEDIR) -mindepth 1 -maxdepth 1 -type d)
# Имя файла локализации
LOCALE_MO       = $(PACKAGE_NAME).mo
# Имя исходника файла локализации
LOCALE_PO       = $(PACKAGE_NAME).po
# Подкаталог для установки файла локализации
LC_MESSAGES		= LC_MESSAGES
# Временный файл локализации
TMP_LOCALE_PO   = /tmp/$(LOCALE_PO)
# Флаги компилятора
CFLAGS          = -Wall -std=c99 -fpic -D_XOPEN_SOURCE=600 -I$(SRCDIR)/h
GCCDEFINES      = -DTEST=TESTDEFINE
# Файлы и папки, которые удалятся по команде make [dist]clean
CLEANED         = $(BINDIR) ./*.o ./*.*~
DISTCLEANED     = $(DEBDIR) ./*.m4 ./*.log ./*.scan ./*.status ./autom4te.* ./Makefile ./.fuse_hidden* ./$(SRCDIR)/h/*.h.in~ ./$(SRCDIR)/h/stamp-h1

CHARSET         = UTF-8

ONELINEOKMSG    = "[$(PACKAGE_NAME)]: TEST - single line: OK"
ONELINEERRMSG   = "[$(PACKAGE_NAME)]: TEST - single line: ERROR"
MULTILINEOKMSG  = "[$(PACKAGE_NAME)]: TEST - multi line: OK"
MULTILINEERRMSG = "[$(PACKAGE_NAME)]: TEST - multi line: ERROR"

# http://linux.yaroslavl.ru/docs/prog/gnu_make_3-79_russian_manual.html#SEC27
VPATH           = $(SRCDIR)

# http://linux.yaroslavl.ru/docs/prog/gnu_make_3-79_russian_manual.html#SEC28
vpath %.h $(SRCDIR)/h
vpath %.c $(SRCDIR)
vpath %.o .

# http://linux.yaroslavl.ru/docs/prog/gnu_make_3-79_russian_manual.html#SEC25
objects := $(patsubst $(SRCDIR)/%.c,%.o,$(wildcard $(SRCDIR)/*.c))

.PHONY: all build clean distclean install uninstall check elang glang help autodoc

all: $(PACKAGE_NAME)
	@echo "[$(PACKAGE_NAME)] - Project compiled"

$(PACKAGE_NAME): $(objects)
	@mkdir -p $(BINDIR)
	$(CC) $(CFLAGS) $(GCCDEFINES) -o $(BINDIR)/$(PACKAGE_NAME) $?
	@strip -s $(BINDIR)/$(PACKAGE_NAME) # Удаляем отладочную информацию из бинарника
	@echo $(DESCRIPTION) > $(DESCRIPTIONFILE)

%.o: %.c
	$(CC) $(CFLAGS) $(GCCDEFINES) -c $?

# Запускаем сборку deb пакета
build:
#	@test -f $(BINDIR)/$(PACKAGE_NAME) || echo "Not found $(BINDIR)/$(PACKAGE_NAME) file" && exit 1;
	@mkdir -p $(DEBDIR)
	@checkinstall \
	--default \
	--nodoc \
	--pkgname=$(PACKAGE_NAME) \
	--pkgrelease=$(PACKAGE_VERSION) \
	--pkgversion=$$(date +%Y%m%d) \
	--pkgsource=$(SRCDIR) \
	--pakdir=$(DEBDIR) \
	--maintainer=$(PACKAGE_EMAIL) \
	--pkglicense=$(PACKAGE_LICENSE) \
	--requires=$(DEPENDENCIES) \
	--install=$$(test ${install} == 'yes' && echo -n 'yes' || echo -n 'no') \
	--gzman=yes \
	--deldoc=yes \
	--deldesc=no \
	--delspec=yes \
	--backup=no \
	--autodoinst=yes \
	--strip=yes

clean:
	@rm -rf $(CLEANED)
	@echo "[$(PACKAGE_NAME)] - Project cleaned"

distclean:
	@rm -rf $(DISTCLEANED)
	@echo "[$(PACKAGE_NAME)] - Dist cleaned"

install:
	@install -D $(BINDIR)/$(PACKAGE_NAME) $(bindir)
	@for localedir in $(LOCALES); do \
		l=$$(basename $$localedir) && \
		install -D $$localedir/$(LC_MESSAGES)/$(LOCALE_MO) $(LOCALE_TARGET)/$(PACKAGE_NAME)/$$l/$(LC_MESSAGES); \
	done
	@install -D -g 0 -o 0 -m 0644 $(MANFILE) $(MAN_TARGET)
	@gzip --force $(MAN_TARGET)/$(PACKAGE_NAME).1
	@echo "[$(PACKAGE_NAME)] - installed to $$(which $(PACKAGE_NAME))"

uninstall:
	@rm -rf $(bindir)/$(PACKAGE_NAME)
	@rm -rf $(MAN_TARGET)/$(PACKAGE_NAME).*
	@rm -rf $(LOCALE_TARGET)/$(PACKAGE_NAME)
	@echo "[$(PACKAGE_NAME)] - uninstalled"

check:
	@test $$($(BINDIR)/$(PACKAGE_NAME) -l20 -ds | wc -m) == '21' && echo $(ONELINEOKMSG) || echo $(ONELINEERRMSG)
	@test $$($(BINDIR)/$(PACKAGE_NAME) -l20 -ds -c5 | wc -l) == '5' && echo $(MULTILINEOKMSG) || echo $(MULTILINEERRMSG)

# Сканирует исходники на предмет использования gettext
# и создает файл локализации ./locale/*/passgen.po.
# Если файл существует, то аккуратно обновляет его,
# сохраняя резервную копию.
elang:
	@for localedir in $(LOCALES); do \
		[ -d $$localedir/$(LC_MESSAGES) ] || mkdir -p $$localedir/$(LC_MESSAGES) && \
		[ -f $$localedir/$(LC_MESSAGES)/$(LOCALE_PO) ] || touch $$localedir/$(LC_MESSAGES)/$(LOCALE_PO) && \
		xgettext \
		--no-wrap \
		--force-po \
		--add-location \
		--join-existing \
		--copyright-holder=$(PACKAGE_AUTHOR) \
		--msgid-bugs-address=$(PACKAGE_EMAIL) \
		--default-domain=$(PACKAGE_NAME) \
		--package-name=$(PACKAGE_NAME) \
		--package-version=$(PACKAGE_VERSION) \
		--output-dir=/tmp \
		--language=C \
		--from-code=$(CHARSET) \
		--keyword=_ \
		$(SRCDIR)/*.c $(SRCDIR)/**/*.h && \
		msginit \
		--no-wrap \
		--no-translator \
		--input=/tmp/$(LOCALE_PO) \
		--output-file=$$localedir/$(LC_MESSAGES)/$(LOCALE_PO) \
		--locale=$$(basename $$localedir).$(CHARSET) && \
		echo -e "Translate $$localedir/$(LC_MESSAGES)/$(LOCALE_PO) and run command\n\n\t$ make glang"; \
	done

# Создает файл локализации ./locale/*/LC_MESSAGES/passgen.mo
glang:
	@for localedir in $(LOCALES); do \
		msgfmt \
		$$localedir/$(LC_MESSAGES)/$(PACKAGE_NAME).po \
		--output-file=$$localedir/$(LC_MESSAGES)/$(LOCALE_MO);\
	done

help:
	@echo -e "`cat ./resource/make/help`"

# Генерируем файл README.md и вставляем в него актуальную информацию
autodoc:
	@cat ./resource/readme/1 > ./README.md
	@./bin/passgen -h >> ./README.md
	@cat ./resource/readme/2 >> ./README.md
	@echo -e $(HELP) >> ./README.md
	@echo "\`\`\`" >> ./README.md
